version: '3'
services:
  app:
    container_name: remix-gun-dev 
    build:
      context: .
      # target: watch-dev
    volumes:
      - ./packages:/app/packages
      - ./config:/app/config
      - ./node_modules:/app/node_modules
    ports:
      - 3000:3333
      - 8002:8002
  #   networks:
  #     - internal
  # nginx:
  #   image: ethibox/nginx-proxy
  #   command:
  #     - /bin/sh
  #     - -c
  #     - |
  #       chown -R 1500:82 /var/www/app/
  #       envsubst '$$NGINX_ROOT_PATH' < /etc/nginx/nginx.template > /etc/nginx/nginx.conf
  #       sed -i -e 's/app:9000/'$$STACK_NAME'_app:9000/g' /etc/nginx/nginx.conf
  #       sed -i -e 's/fastcgi_pass backend;/fastcgi_pass backend;\n            fastcgi_param HTTPS '$$HTTPS';/g' /etc/nginx/nginx.conf
  #       nginx -g 'daemon off;'
  #   environment:
  #     - NGINX_ROOT_PATH=/var/www/app/public
  #     - STACK_NAME={{ index .Service.Labels "com.docker.stack.namespace" }}
  #     - HTTPS=${HTTPS:-0}
  #   volumes:
  #     - ${VOLUME_PATH}storage:/var/www/app/storage
  #     - ${VOLUME_PATH}data:/var/www/app/public
  #   deploy:
  #     labels:
  #       - traefik.enable=true
  #       - traefik.http.routers.remix-gun-${NUMBER:-1}.rule=Host(`${DOMAIN:-remix-gun.local}`)
  #       - traefik.http.routers.remix-gun-${NUMBER:-1}.entrypoints=${SCHEME:-https}
  #       - traefik.http.routers.remix-gun-${NUMBER:-1}.service=remix-gun-${NUMBER:-1}
  #       - traefik.http.routers.remix-gun-${NUMBER:-1}.tls.certresolver=letsencrypt
  #       - traefik.http.services.remix-gun-${NUMBER:-1}.loadbalancer.server.port=80
  #   networks:
  #     - internal
  #     - traefik
# volumes:
  # data:
  # plugins:
    
# networks:
#   default:
#     external: true
#     name: traefik-net